version: '3'

tasks:
  install:
    curl https://get.docker.com/ | sudo bash
    sudo usermod -aG docker $USER

  build_push:
    # internal: true
    description: Build and push a Docker image
    summary: |
      This task builds and pushes a Docker image to a specified registry.

      Logic:
      - The task tags the image with `IMAGE_TAG` and pushes it to `REGISTRY/REPOSITORY`.
      - If git is available for the source, it tags the image with the git short hash and pushes the latest git commit tag.
      - The `SRC` variable specifies the directory path where the Dockerfile is located for the application.
      - Optionally, it uses a registry cache tag for more efficient builds if `REGISTRY_CACHE_TAG` is provided.

      Variables:
      - `REGISTRY`: The Docker registry where the image will be pushed.
      - `REPOSITORY`: The repository name in the registry.
      - `SRC`: The directory path where the Dockerfile is located.
      - `GIT_TAG`: The short hash of the latest git commit (generated if git is available).
      - `IMAGE_TAG`: The tag of the image to be pushed (defaults to "latest" if not provided).
      - `REGISTRY_CACHE_TAG`: Optional cache tag for the registry caching feature, disabled by default if value is provided it will build the image using the registry cache.
      - `ARGS`: Additional build arguments for Docker (defaults to an empty string if not provided).

      Example Input:
      - `REGISTRY=myregistry.com`
      - `REPOSITORY=myrepo`
      - `SRC=path/to/dockerfile`
      - `IMAGE_TAG=latest`
      - `REGISTRY_CACHE_TAG=cachetag`
      - `ARGS=--build-arg EXAMPLE_ARG=value`
    
    requires:
      vars:
        - REGISTRY
        - REPOSITORY
        - SRC
    vars:
      GIT_TAG: 
        sh: |
          (command -v git > /dev/null && git rev-parse --short HEAD) || echo ''
      IMAGE_TAG: '{{default "latest" .IMAGE_TAG}}'
      REGISTRY_CACHE_TAG: '{{default "" .REGISTRY_CACHE_TAG}}'
      ARGS: '{{default "" .ARGS}}'
      TMP_DIR:
        sh: |
          IMAGE=/tmp/docker-build/{{.REPOSITORY}}-{{.IMAGE_TAG}}
          mkdir -p $IMAGE
          echo $IMAGE
    dir: '{{.SRC}}'
    cmds:
    - echo "{{.SRC}}"
    - export DOCKER_BUILDKIT=1
    - |
        # set -x
        {{ if .REGISTRY_CACHE_TAG }}
          echo -e "-----\nUsing Registry Cache Tag: {{.REGISTRY_CACHE_TAG}} to build the image\n-----"
          
          cache_from="registry,ref={{.REGISTRY}}/{{.REPOSITORY}}:{{.IMAGE_TAG}}"
          cache_to="inline"
          
          docker buildx build \
              --cache-from type=$cache_from --cache-to type=$cache_to \
              {{range $no, $line := .ARGS | splitLines -}}
              {{$line}} \
              {{end}} {{ if .GIT_TAG  }} --tag {{.REGISTRY}}/{{.REPOSITORY}}:{{.GIT_TAG}}  {{end}} \
              --tag {{.REGISTRY}}/{{.REPOSITORY}}:{{.IMAGE_TAG}} \
              --iidfile {{.TMP_DIR}}/iidfile \
              --push {{.SRC}}
              # --metadata-file {{.TMP_DIR}}/metadata-file \
        
        {{ else }}
        
          docker build -t "{{.REGISTRY}}/{{.REPOSITORY}}:{{.IMAGE_TAG}}" .
          docker push "{{.REGISTRY}}/{{.REPOSITORY}}:{{.IMAGE_TAG}}"
          
          {{ if .GIT_TAG }}
          
            docker tag "{{.REGISTRY}}/{{.REPOSITORY}}:{{.IMAGE_TAG}}" "{{.REGISTRY}}/{{.REPOSITORY}}:{{.GIT_TAG}}"
            docker push "{{.REGISTRY}}/{{.REPOSITORY}}:{{.GIT_TAG}}"
          
          {{end}}
        
        {{end}}


